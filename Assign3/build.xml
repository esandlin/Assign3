<project name="Client" default="targets" basedir=".">

   <!-- set global properties for this build -->
	<property name="src.dir"     value="src"/>
	<property name="build.dir"   value="build"/>
	<property name="classes.dir" value="${build.dir}/classes"/>
	<property name="jar.dir"     value="${build.dir}/jar"/>
   <property name="hostId" value="localhost" />
   <property name="regPort" value="1099" />

   <path id="compile.classpath">
      <pathelement location="${build}"/>
   </path>

   <target name="checkos">
	<condition property="os" value="windows">
		<os family="windows" />
	</condition>
	<condition property="os" value="unix">
		<os family="unix" />
	</condition>
	<condition property="os" value="mac">
		<os family="mac" />
	</condition>
   </target>

   <target name="targets" depends="checkos">
      <echo message="targets are clean, prepare, compile, server, client, jar, and run"/>
      <echo message="java home is: ${java.home}"/>
      <echo message="os family is: ${os}"/>
      <echo>
         start server with: ant server -DhostId=localhost -DregPort=1099
      </echo>
      <echo>
         start client with: -DhostId=localhost -DregPort=1099 -DuserId=Tim.Lindquist
      </echo>
   </target>

   <target name="prepare">
      <!-- Create the time stamp -->
      <tstamp/>
      <!-- Create the build directory structure used by compile -->
      <echo message="home defined as: ${home}" />
      <mkdir dir="${build}" />
   </target>

   <target name="compile" depends="prepare"
           description="Compile Java sources">
      <javac srcdir="${src}"
             includeantruntime="false"
             destdir="${build}">
         <classpath refid="compile.classpath"/>
      </javac>
<!--      <rmic classname="personnel.EmpServerImpl" base="${build}">
             <classpath refid="compile.classpath"/>
          </rmic> -->
   </target>

   <target name="client" depends="compile"
           description="Start client">
         <echo message="user.dir is: ${user.dir}"/>
         <echo message="command line client: java -cp classes -Djava.security.policy=policyClient RMIClient ${hostId} ${regPort}" />
         <java classname="RMIClientGui" fork="yes">
           <classpath refid="compile.classpath"/>
<!--           <sysproperty key="java.security.policy" value="policyClient"/> -->
           <arg value="${hostId}"/> 
           <arg value="${regPort}"/>
         </java>
   </target>

   <target name="server" depends="compile"
           description="Using parallel task, start server and client">
     <parallel>
       <exec dir="${basedir}"
             executable="rmiregistry">
         <arg value="${regPort}"/>
         <env key="CLASSPATH" path="${basedir}/${build}"/>
       </exec>
       <sequential>
         <sleep seconds="10"/>
         <java classname="Client.EmpServerImpl" fork="yes">
<!--           <sysproperty key="java.security.policy" value="policyServer"/> -->
           <sysproperty key="java.rmi.server.hostname" value="${hostId}"/>
           <arg value="${hostId}"/> 
           <arg value="${regPort}"/> 
           <classpath refid="compile.classpath"/>
         </java>
       </sequential>
     </parallel>
   </target>
	
    <target name="jar" depends="compile">
        <mkdir dir="${jar.dir}"/>
        <jar destfile="${jar.dir}/${ant.project.name}.jar" basedir="${jar.dir}">
            <manifest>
                <attribute name="Main-Class" value="${main-class}"/>
            </manifest>
        </jar>
    </target>

    <target name="run" depends="jar">
        <java jar="${jar.dir}/${ant.project.name}.jar" fork="true"/>
    	 <java fork="true" classname="${main-class}">
    	            <classpath>
    	                <path refid="classpath"/>
    	                <path location="${jar.dir}/${ant.project.name}.jar"/>
    	            </classpath>
    	        </java>
    </target>

   <target name="clean">
     <!-- Delete the ${build} directory tree -->
     <delete dir="${build}" />
   	 <delete dir="${jar.dir}" />
     <delete dir="${bin.dir}" />
    <!-- <delete file="employees.ser" /> -->
   </target>

</project>
